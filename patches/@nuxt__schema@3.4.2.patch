diff --git a/dist/index.d.ts b/dist/index.d.ts
index 7b90a2bf8297c4aeef4027488a8c0dff63e0f30b..c025c765bf4158890502082c8c8767cf08c403ee 100644
--- a/dist/index.d.ts
+++ b/dist/index.d.ts
@@ -539,6 +539,15 @@ interface ImportPresetWithDeprecation extends InlinePreset {
 interface GenerateAppOptions {
     filter?: (template: ResolvedNuxtTemplate<any>) => boolean;
 }
+interface NuxtAnalyzeMeta {
+    name: string;
+    slug: string;
+    startTime: number;
+    endTime: number;
+    analyzeDir: string;
+    buildDir: string;
+    outDir: string;
+}
 /**
  * The listeners to Nuxt build time events
  */
@@ -616,6 +625,12 @@ interface NuxtHooks {
      * @returns Promise
      */
     'build:manifest': (manifest: Manifest) => HookResult;
+    /**
+     * Called when `nuxt analyze` is finished
+     * @param meta the analyze meta object, mutations will be saved to `meta.json`
+     * @returns Promise
+     */
+    'build:analyze:done': (meta: NuxtAnalyzeMeta) => HookResult;
     /**
      * Called before generating the app.
      * @param options GenerateAppOptions object
@@ -1398,7 +1413,7 @@ interface ConfigSchema {
   * The configuration path is relative to `options.rootDir` (default is current working directory).
   * Setting this field may be necessary if your project is organized as a yarn workspace-styled mono-repository.
   * 
-  * @default ["/<rootDir>/node_modules","/Users/daniel/code/nuxt.js/packages/schema/node_modules"]
+  * @default ["/<rootDir>/node_modules","/Users/antfu/i/nuxt/packages/schema/node_modules"]
   * 
   * @example
   * ```js
@@ -1409,6 +1424,15 @@ interface ConfigSchema {
  */
  modulesDir: Array<string>,
 
+ /**
+  * The directory where Nuxt will store the generated files when running `nuxt analyze`.
+  * 
+  * If a relative path is specified, it will be relative to your `rootDir`.
+  * 
+  * @default "/<rootDir>/.nuxt/analyze"
+ */
+ analyzeDir: string,
+
  /**
   * Whether Nuxt is running in development mode.
   * 
@@ -1606,7 +1630,7 @@ interface ConfigSchema {
  /**
   * More customizable than `ignorePrefix`: all files matching glob patterns specified inside the `ignore` array will be ignored in building.
   * 
-  * @default ["**\/*.stories.{js,ts,jsx,tsx}","**\/*.{spec,test}.{js,ts,jsx,tsx}","**\/*.d.ts",".output",".git","**\/-*.*"]
+  * @default ["**\/*.stories.{js,ts,jsx,tsx}","**\/*.{spec,test}.{js,ts,jsx,tsx}","**\/*.d.ts",".output",".git","/<rootDir>/.nuxt/analyze","**\/-*.*"]
  */
  ignore: Array<string>,
 
@@ -2610,4 +2634,4 @@ declare const _default: {
     [x: string]: untyped_dist_types_a20127ea.a | untyped_dist_types_a20127ea.J | untyped_dist_types_a20127ea.I;
 };
 
-export { AppConfig, AppConfigInput, AppHeadMetaObject, Component, ComponentsDir, ComponentsOptions, CustomAppConfig, GenerateAppOptions, HeadAugmentations, HookResult, ImportPresetWithDeprecation, ImportsOptions, MetaObject, MetaObjectRaw, ModuleDefinition, ModuleMeta, ModuleOptions, ModuleSetupReturn, Nuxt, NuxtApp, NuxtAppConfig, NuxtCompatibility, NuxtCompatibilityIssue, NuxtCompatibilityIssues, NuxtConfig, NuxtConfigLayer, _default as NuxtConfigSchema, NuxtHookName, NuxtHooks, NuxtLayout, NuxtMiddleware, NuxtModule, NuxtOptions, NuxtPage, NuxtPlugin, NuxtPluginTemplate, NuxtTemplate, PublicRuntimeConfig, ResolvedNuxtTemplate, RouterConfig, RouterConfigSerializable, RouterOptions, RuntimeConfig, RuntimeValue, ScanDir, TSReference, ViteConfig, WatchEvent };
+export { AppConfig, AppConfigInput, AppHeadMetaObject, Component, ComponentsDir, ComponentsOptions, CustomAppConfig, GenerateAppOptions, HeadAugmentations, HookResult, ImportPresetWithDeprecation, ImportsOptions, MetaObject, MetaObjectRaw, ModuleDefinition, ModuleMeta, ModuleOptions, ModuleSetupReturn, Nuxt, NuxtAnalyzeMeta, NuxtApp, NuxtAppConfig, NuxtCompatibility, NuxtCompatibilityIssue, NuxtCompatibilityIssues, NuxtConfig, NuxtConfigLayer, _default as NuxtConfigSchema, NuxtHookName, NuxtHooks, NuxtLayout, NuxtMiddleware, NuxtModule, NuxtOptions, NuxtPage, NuxtPlugin, NuxtPluginTemplate, NuxtTemplate, PublicRuntimeConfig, ResolvedNuxtTemplate, RouterConfig, RouterConfigSerializable, RouterOptions, RuntimeConfig, RuntimeValue, ScanDir, TSReference, ViteConfig, WatchEvent };
diff --git a/dist/index.mjs b/dist/index.mjs
index 239ce22edfa5aaae8b39a8cf78a3ed2539f07a0a..9f9af017c0b1a74e1a47ade9df401a5569382a0f 100644
--- a/dist/index.mjs
+++ b/dist/index.mjs
@@ -382,10 +382,11 @@ const build = defineUntypedSchema({
           return val ?? false;
         }
         const rootDir = await get("rootDir");
+        const analyzeDir = await get("analyzeDir");
         return {
           template: "treemap",
           projectRoot: rootDir,
-          filename: join(rootDir, ".nuxt/stats", "{name}.html")
+          filename: join(analyzeDir, "{name}.html")
         };
       }
     }
@@ -569,20 +570,20 @@ const common = defineUntypedSchema({
     $resolve: async (val, get) => resolve(await get("rootDir"), val || ".nuxt")
   },
   /**
-  * Used to set the modules directories for path resolving (for example, webpack's
-  * `resolveLoading`, `nodeExternals` and `postcss`).
-  *
-  * The configuration path is relative to `options.rootDir` (default is current working directory).
-  *
-  * Setting this field may be necessary if your project is organized as a yarn workspace-styled mono-repository.
-  *
-  * @example
-  * ```js
-  * export default {
-  *   modulesDir: ['../../node_modules']
-  * }
-  * ```
-  */
+   * Used to set the modules directories for path resolving (for example, webpack's
+   * `resolveLoading`, `nodeExternals` and `postcss`).
+   *
+   * The configuration path is relative to `options.rootDir` (default is current working directory).
+   *
+   * Setting this field may be necessary if your project is organized as a yarn workspace-styled mono-repository.
+   *
+   * @example
+   * ```js
+   * export default {
+   *   modulesDir: ['../../node_modules']
+   * }
+   * ```
+   */
   modulesDir: {
     $default: ["node_modules"],
     $resolve: async (val, get) => [
@@ -590,6 +591,14 @@ const common = defineUntypedSchema({
       resolve(process.cwd(), "node_modules")
     ]
   },
+  /**
+   * The directory where Nuxt will store the generated files when running `nuxt analyze`.
+   *
+   * If a relative path is specified, it will be relative to your `rootDir`.
+   */
+  analyzeDir: {
+    $resolve: async (val, get) => val ? resolve(await get("rootDir"), val) : resolve(await get("buildDir"), "analyze")
+  },
   /**
    * Whether Nuxt is running in development mode.
    *
@@ -783,6 +792,7 @@ const common = defineUntypedSchema({
       // ignore type declarations
       ".output",
       ".git",
+      await get("analyzeDir"),
       await get("ignorePrefix") && `**/${await get("ignorePrefix")}*.*`
     ].concat(val).filter(Boolean)
   },
@@ -1386,6 +1396,14 @@ const vite = defineUntypedSchema({
       emptyOutDir: false
     },
     server: {
+      watch: {
+        ignored: {
+          $resolve: async (val, get) => [
+            await get("analyzeDir"),
+            ...val ?? []
+          ]
+        }
+      },
       fs: {
         allow: {
           $resolve: async (val, get) => [
@@ -1423,10 +1441,11 @@ const webpack = defineUntypedSchema({
           return val ?? false;
         }
         const rootDir = await get("rootDir");
+        const analyzeDir = await get("analyzeDir");
         return {
           template: "treemap",
           projectRoot: rootDir,
-          filename: join(rootDir, ".nuxt/stats", "{name}.html")
+          filename: join(analyzeDir, "{name}.html")
         };
       }
     },
diff --git a/schema/config.d.ts b/schema/config.d.ts
index 6be0f8d6e7083c6a4ca43114755955e53eec4c36..05f04d50019565889aeb7020554e21d7634cfd66 100644
--- a/schema/config.d.ts
+++ b/schema/config.d.ts
@@ -477,7 +477,7 @@ export interface ConfigSchema {
   * The configuration path is relative to `options.rootDir` (default is current working directory).
   * Setting this field may be necessary if your project is organized as a yarn workspace-styled mono-repository.
   * 
-  * @default ["/<rootDir>/node_modules","/Users/daniel/code/nuxt.js/packages/schema/node_modules"]
+  * @default ["/<rootDir>/node_modules","/Users/antfu/i/nuxt/packages/schema/node_modules"]
   * 
   * @example
   * ```js
@@ -488,6 +488,15 @@ export interface ConfigSchema {
  */
  modulesDir: Array<string>,
 
+ /**
+  * The directory where Nuxt will store the generated files when running `nuxt analyze`.
+  * 
+  * If a relative path is specified, it will be relative to your `rootDir`.
+  * 
+  * @default "/<rootDir>/.nuxt/analyze"
+ */
+ analyzeDir: string,
+
  /**
   * Whether Nuxt is running in development mode.
   * 
@@ -685,7 +694,7 @@ export interface ConfigSchema {
  /**
   * More customizable than `ignorePrefix`: all files matching glob patterns specified inside the `ignore` array will be ignored in building.
   * 
-  * @default ["**\/*.stories.{js,ts,jsx,tsx}","**\/*.{spec,test}.{js,ts,jsx,tsx}","**\/*.d.ts",".output",".git","**\/-*.*"]
+  * @default ["**\/*.stories.{js,ts,jsx,tsx}","**\/*.{spec,test}.{js,ts,jsx,tsx}","**\/*.d.ts",".output",".git","/<rootDir>/.nuxt/analyze","**\/-*.*"]
  */
  ignore: Array<string>,
 
diff --git a/schema/config.defaults.json b/schema/config.defaults.json
index c72d793649faf8de265f9900d3bbad4afdfbceed..c53d992ba97a1c2f5c3a7d04ca8a526fc267de02 100644
--- a/schema/config.defaults.json
+++ b/schema/config.defaults.json
@@ -42,6 +42,11 @@
       "emptyOutDir": false
     },
     "server": {
+      "watch": {
+        "ignored": [
+          "/<rootDir>/.nuxt/analyze"
+        ]
+      },
       "fs": {
         "allow": [
           "/<rootDir>/.nuxt",
@@ -49,7 +54,7 @@
           "/<rootDir>",
           "/<rootDir>",
           "/<rootDir>/node_modules",
-          "/Users/daniel/code/nuxt.js/packages/schema/node_modules"
+          "/Users/antfu/i/nuxt/packages/schema/node_modules"
         ]
       }
     }
@@ -117,10 +122,11 @@
     "analyze": false
   },
   "buildDir": "/<rootDir>/.nuxt",
+  "analyzeDir": "/<rootDir>/.nuxt/analyze",
   "workspaceDir": "/<rootDir>",
   "modulesDir": [
     "/<rootDir>/node_modules",
-    "/Users/daniel/code/nuxt.js/packages/schema/node_modules"
+    "/Users/antfu/i/nuxt/packages/schema/node_modules"
   ],
   "builder": "@nuxt/vite-builder",
   "sourcemap": {
@@ -231,6 +237,7 @@
     "**/*.d.ts",
     ".output",
     ".git",
+    "/<rootDir>/.nuxt/analyze",
     "**/-*.*"
   ],
   "watch": [],
diff --git a/schema/config.md b/schema/config.md
index db2128497e7f4d4d754ab5c5e363655921a02e47..3cda558e8d0e2efdeb6f948bf6b547dcfc4cbea5 100644
--- a/schema/config.md
+++ b/schema/config.md
@@ -317,7 +317,7 @@ Many tools assume that `.nuxt` is a hidden directory (because it starts with a `
 
 # `modulesDir`
 - **Type**: `array`
-- **Default**: `["/<rootDir>/node_modules","/Users/daniel/code/nuxt.js/packages/schema/node_modules"]`
+- **Default**: `["/<rootDir>/node_modules","/Users/antfu/i/nuxt/packages/schema/node_modules"]`
 
 > Used to set the modules directories for path resolving (for example, webpack's `resolveLoading`, `nodeExternals` and `postcss`).
 
@@ -326,6 +326,16 @@ The configuration path is relative to `options.rootDir` (default is current work
 Setting this field may be necessary if your project is organized as a yarn workspace-styled mono-repository.
 
 
+# `analyzeDir`
+- **Type**: `string`
+- **Default**: `"/<rootDir>/.nuxt/analyze"`
+
+> The directory where Nuxt will store the generated files when running `nuxt analyze`.
+
+
+If a relative path is specified, it will be relative to your `rootDir`.
+
+
 # `dev`
 - **Type**: `boolean`
 - **Default**: `false`
@@ -452,7 +462,7 @@ Nuxt tries to resolve each item in the modules array using node require path (in
 
 # `ignore`
 - **Type**: `array`
-- **Default**: `["**/*.stories.{js,ts,jsx,tsx}","**/*.{spec,test}.{js,ts,jsx,tsx}","**/*.d.ts",".output",".git","**/-*.*"]`
+- **Default**: `["**/*.stories.{js,ts,jsx,tsx}","**/*.{spec,test}.{js,ts,jsx,tsx}","**/*.d.ts",".output",".git","/<rootDir>/.nuxt/analyze","**/-*.*"]`
 
 > More customizable than `ignorePrefix`: all files matching glob patterns specified inside the `ignore` array will be ignored in building.
 
@@ -995,11 +1005,18 @@ We recommend instead either enabling [**Take Over Mode**](https://vuejs.org/guid
 
 ## `server`
 
+### `watch`
+
+#### `ignored`
+- **Type**: `array`
+- **Default**: `["/<rootDir>/.nuxt/analyze"]`
+
+
 ### `fs`
 
 #### `allow`
 - **Type**: `array`
-- **Default**: `["/<rootDir>/.nuxt","/<rootDir>","/<rootDir>","/<rootDir>","/<rootDir>/node_modules","/Users/daniel/code/nuxt.js/packages/schema/node_modules"]`
+- **Default**: `["/<rootDir>/.nuxt","/<rootDir>","/<rootDir>","/<rootDir>","/<rootDir>/node_modules","/Users/antfu/i/nuxt/packages/schema/node_modules"]`
 
 
 # `webpack`
diff --git a/schema/config.schema.json b/schema/config.schema.json
index f3b693930018e0b8f2fbae540bd6d98ede5c8308..2586cd300506e9373c68c15e12fa474a836f83d9 100644
--- a/schema/config.schema.json
+++ b/schema/config.schema.json
@@ -753,13 +753,21 @@
       "id": "#modulesDir",
       "default": [
         "/<rootDir>/node_modules",
-        "/Users/daniel/code/nuxt.js/packages/schema/node_modules"
+        "/Users/antfu/i/nuxt/packages/schema/node_modules"
       ],
       "type": "array",
       "items": {
         "type": "string"
       }
     },
+    "analyzeDir": {
+      "title": "The directory where Nuxt will store the generated files when running `nuxt analyze`.",
+      "description": "If a relative path is specified, it will be relative to your `rootDir`.",
+      "tags": [],
+      "id": "#analyzeDir",
+      "default": "/<rootDir>/.nuxt/analyze",
+      "type": "string"
+    },
     "dev": {
       "title": "Whether Nuxt is running in development mode.",
       "description": "Normally, you should not need to set this.",
@@ -958,6 +966,7 @@
         "**/*.d.ts",
         ".output",
         ".git",
+        "/<rootDir>/.nuxt/analyze",
         "**/-*.*"
       ],
       "type": "array",
@@ -1911,6 +1920,27 @@
         "server": {
           "id": "#vite/server",
           "properties": {
+            "watch": {
+              "id": "#vite/server/watch",
+              "properties": {
+                "ignored": {
+                  "id": "#vite/server/watch/ignored",
+                  "default": [
+                    "/<rootDir>/.nuxt/analyze"
+                  ],
+                  "type": "array",
+                  "items": {
+                    "type": "string"
+                  }
+                }
+              },
+              "default": {
+                "ignored": [
+                  "/<rootDir>/.nuxt/analyze"
+                ]
+              },
+              "type": "object"
+            },
             "fs": {
               "id": "#vite/server/fs",
               "properties": {
@@ -1922,7 +1952,7 @@
                     "/<rootDir>",
                     "/<rootDir>",
                     "/<rootDir>/node_modules",
-                    "/Users/daniel/code/nuxt.js/packages/schema/node_modules"
+                    "/Users/antfu/i/nuxt/packages/schema/node_modules"
                   ],
                   "type": "array",
                   "items": {
@@ -1937,13 +1967,18 @@
                   "/<rootDir>",
                   "/<rootDir>",
                   "/<rootDir>/node_modules",
-                  "/Users/daniel/code/nuxt.js/packages/schema/node_modules"
+                  "/Users/antfu/i/nuxt/packages/schema/node_modules"
                 ]
               },
               "type": "object"
             }
           },
           "default": {
+            "watch": {
+              "ignored": [
+                "/<rootDir>/.nuxt/analyze"
+              ]
+            },
             "fs": {
               "allow": [
                 "/<rootDir>/.nuxt",
@@ -1951,7 +1986,7 @@
                 "/<rootDir>",
                 "/<rootDir>",
                 "/<rootDir>/node_modules",
-                "/Users/daniel/code/nuxt.js/packages/schema/node_modules"
+                "/Users/antfu/i/nuxt/packages/schema/node_modules"
               ]
             }
           },
@@ -2000,6 +2035,11 @@
           "emptyOutDir": false
         },
         "server": {
+          "watch": {
+            "ignored": [
+              "/<rootDir>/.nuxt/analyze"
+            ]
+          },
           "fs": {
             "allow": [
               "/<rootDir>/.nuxt",
@@ -2007,7 +2047,7 @@
               "/<rootDir>",
               "/<rootDir>",
               "/<rootDir>/node_modules",
-              "/Users/daniel/code/nuxt.js/packages/schema/node_modules"
+              "/Users/antfu/i/nuxt/packages/schema/node_modules"
             ]
           }
         }
@@ -2881,8 +2921,9 @@
     "buildDir": "/<rootDir>/.nuxt",
     "modulesDir": [
       "/<rootDir>/node_modules",
-      "/Users/daniel/code/nuxt.js/packages/schema/node_modules"
+      "/Users/antfu/i/nuxt/packages/schema/node_modules"
     ],
+    "analyzeDir": "/<rootDir>/.nuxt/analyze",
     "dev": false,
     "test": false,
     "debug": false,
@@ -2922,6 +2963,7 @@
       "**/*.d.ts",
       ".output",
       ".git",
+      "/<rootDir>/.nuxt/analyze",
       "**/-*.*"
     ],
     "watch": [],
@@ -3057,6 +3099,11 @@
         "emptyOutDir": false
       },
       "server": {
+        "watch": {
+          "ignored": [
+            "/<rootDir>/.nuxt/analyze"
+          ]
+        },
         "fs": {
           "allow": [
             "/<rootDir>/.nuxt",
@@ -3064,7 +3111,7 @@
             "/<rootDir>",
             "/<rootDir>",
             "/<rootDir>/node_modules",
-            "/Users/daniel/code/nuxt.js/packages/schema/node_modules"
+            "/Users/antfu/i/nuxt/packages/schema/node_modules"
           ]
         }
       }